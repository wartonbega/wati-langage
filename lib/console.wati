inclue "std.wati";
inclue "w_terminal/w_terminal.wati";

lib_std = "std.wati";
term = w_terminal();

// lire et ecrire un fichier : !ouvre(nomdefichier) et !ecrit(nomdefichier, contenu)
!println("Wati-console : 
entrez le code, puis entrez 'exec' (puis entrée) pour executer le code.")

fonction erreur_handler(err) fait 
    !println(!term.couleur(term.gras, !term.couleur(term.rouge,  "erreur : " + err.erreur)))
fin

fonction cap_max (num) fait 
    // prend un traqueur en argument et le cape au maximum de la liste commandes
    si *num < 0 fait 
        *num = 0;
    fin
fin

fonction dernier_mot (buff) fait 
    "reconnaît et renvoie en char le dernier mot du buffer"
    i = buff.taille - 1;
    mot = "";
    tant que !et(buff[i] != " ", i >= 0) fait 
        mot = buff[i] + mot;
        i = i - 1;
    fin
    renvoie mot;
fin

fonction reconnait_couleur(buffer) fait 
    m = !dernier_mot(buffer);
    si m == "fonction" fait 
        !print("\b\b\b\b\b\b\b\b")
        !print(!term.couleur(term.bleu, "fonction"))
    sinonsi m == "si" fait 
        !print("\b\b")
        !print(!term.couleur(term.bleu, "si"))
    sinonsi m == "sinon" fait 
        !print("\b\b\b\b\b")
        !print(!term.couleur(term.bleu, "sinon"))
    sinonsi m == "sinonsi" fait 
        !print("\b\b\b\b\b\b\b")
        !print(!term.couleur(term.bleu, "sinonsi"))
    sinonsi m == "fin" fait 
        !print("\b\b\b")
        !print(!term.couleur(term.magenta, "fin"))
    sinonsi m == "fait" fait 
        !print("\b\b\b\b")
        !print(!term.couleur(term.magenta, "fait"))
    sinonsi m == "alors" fait 
        !print("\b\b\b\b\b")
        !print(!term.couleur(term.magenta, "alors"))
    sinonsi m == "renvoie" fait 
        !print("\b\b\b\b\b\b\b")
        !print(!term.couleur(term.rouge, "renvoie"))
    sinonsi m == "casse" fait 
        !print("\b\b\b\b\b")
        !print(!term.couleur(term.rouge, "casse"))
    sinonsi m == "continue" fait 
        !print("\b\b\b\b\b\b\b\b")
        !print(!term.couleur(term.rouge, "continue"))
    fin
fin

fonction inputln_terminal(x, ancien_buffer) fait
    total = "";
    buffer = ancien_buffer;
    !print(x)
    e = "";
    tant que (e != "\n") fait
        si e == "\t" alors
            !buffer.plus(" ")
            !buffer.plus(" ")
            !buffer.plus(" ")
            !buffer.plus(" ")
            !buffer.plus(" ")
        sinonsi (e != "") alors
            buffer = buffer + e;
            !reconnait_couleur(buffer)
        fin
        
        e = !input("");
        si (e == "\b") alors
            si (buffer.taille > 0) alors
                !buffer.pop(buffer.taille - 1);
                !print("\b   \b\b\b")
            fin
            si (buffer.taille == 0) alors
                !print("  \b\b")
            fin
            e = "";
        fin
    fin
    pour i allant de 0 a buffer.taille fait
        total = total + !buffer.en(0);
        !buffer.pop(0)
    fin
    renvoie total;
fin

commandes = list();

compteur = 0;

fonction execute_code (code) fait 
    !execute(code)
fin

l = "";
tant que 1 fait 
    total = "inclue lib_std;\n"; 
    l = "";
    tant que 1 fait
        buffer = list();
        e = !input("> ");
        si (e == "\b") alors
            si (buffer.taille > 0) alors
                !buffer.pop(buffer.taille - 1);
                !print("\b   \b\b\b")
            fin
            si (buffer.taille == 0) alors
                !print("  \b\b")
            fin
            e = "";
        sinon   
            si e == "\t" alors
                !buffer.plus(" ")
                !buffer.plus(" ")
                !buffer.plus(" ")
                !buffer.plus(" ")
                !buffer.plus(" ")
            sinon
                !buffer.plus(e)
            fin
            !reconnait_couleur(buffer)
        fin
        

        si e == "\n" fait
            si compteur != commandes.taille fait 
                e = commandes[compteur];
                !println(">>> " + e)

                total = total + e + "\n";
                !commandes.plus(e)
                compteur = commandes.taille;
                continue;
            fin
        sinon
            e = !input("");
            si (e == "\b") alors
                si (buffer.taille > 0) alors
                    !buffer.pop(buffer.taille - 1);
                    !print("\b   \b\b\b")
                fin
                si (buffer.taille == 0) alors
                    !print("  \b\b")
                fin
                e = "";
            sinon
                si e == "\t" alors
                    !buffer.plus(" ")
                    !buffer.plus(" ")
                    !buffer.plus(" ")
                    !buffer.plus(" ")
                    !buffer.plus(" ")
                sinon
                    !buffer.plus(e)
                fin
                !reconnait_couleur(buffer)
            fin
            si e == "\n" alors 
                pour i allant de 0 a buffer.taille fait
                    total = total + !buffer.en(0);
                    !buffer.pop(0)
                fin
                total = total + "\n";
                continue;
            fin
        fin
        si e == "[" fait // entrée de la fleche du haut
            s = !input("");
            si s == "A" fait
                e = "";
                compteur = compteur - 1;
                !cap_max(&compteur)
                pos = !term.position();
                !term.ligne_blanche(pos[0])
                !terminal_curseur(pos[0], 0)
                !print("¿ ", commandes[compteur], " ?")
            fin
        sinon
            l = !inputln_terminal("", buffer);
            si l == "exec" fait 
                casse;
            fin
            si l == "exit" fait 
                renvoie; // termine le programme
            fin
            total = total + l + "\n";
            !commandes.plus(l)
            compteur = commandes.taille;
        fin
    fin
    !println("---- code ---- ")
    !println(total)
    !println("---- execution ----")
    !essaie(!execute_code, list() + total, !erreur_handler);
    !println("---- fin de l'execution ----")
fin
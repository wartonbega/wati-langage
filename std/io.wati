inclue "syscall.watiH";
inclue "listes.watiH";
inclue "entiers.watiH";
inclue "mallom.watiH";
inclue "chaine.watiH";

fonction <*rien> mallom (<ent> taille);

<ent> __stdin = 0;
<ent> __stdout = 1;
<ent> __stderr = 2;

<ent> __icanon = 2;
<ent> __echo = 8;

<ent> __buff_size = 1024;


fonction <rien> print(<chr> x) fait 
    tamp = c"";
    tamp[0] = x;
    !write(__stdout, <[_]chr>(&tamp), 1);
fin

fonction <rien> println(<chr> x) fait 
    !print(x);
    !print('\n');
fin

fonction <rien> print(<[_]chr> x) fait 
    !write(__stdout, x, !long(x));
fin

fonction <rien> input(<[_]chr> tamp, <ent> taille) fait 
    !read(__stdin, tamp, taille);
fin

fonction <rien> exit(<ent> code) fait
    !exit(<ent8>(code));
fin

fonction <chaine> input_c (<chaine> prompt) fait 
    tamp = <[_]chr>(!mallom(!taillede(<chaine>)));
    
    !print(prompt);
    !input(tamp, !taillede(<chaine>));

    t = !long(tamp);
    
    si tamp[t - 1] == '\n' fait 
        tamp[t - 1] = '';
    fin
    
    chaine_r = c"";
    dest = <[_]chr>(&chaine_r);

    !chr_copie(!taillede(<chaine>), dest, tamp);
    
    renvoie chaine_r;
fin

fonction <rien> printf(<[_]chr> source, <[_]chr> arg1) fait 
    l = !long(source);
    pour i dans [0, l] fait 
        si source[i] == '$' fait
            !print(arg1);
        fin sinon fait
            !print(source[i]);
        fin
    fin
fin

fonction <rien> printlnf(<[_]chr> source, <[_]chr> arg1) fait 
    !printf(source, arg1);
    !print('\n');
fin

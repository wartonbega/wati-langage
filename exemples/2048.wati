inclue "std.wati";
inclue "./w_graphs/wati_graphs_events.wati";


classe game contient

    methode constructeur () fait
        self.police = "font.ttf";
        self.map = list();

        self.psize = 150;

        self.anti_repett = 1;

        pour x allant de 0 a 4 fait
            (self.map + list())
            pour y allant de 0 a 4 fait
                (self.map[x] + 0)
            fin
        fin
        (self.map[2]!.modifie(1, 4))
        (self.map[2]!.modifie(2, 4))


        !init_window(600, 600)
    fin

    methode couleur (num) fait
        si num == 0 alors
            !set_color(255, 255, 255, 255)
        sinonsi num <= 2 alors
            !set_color(200, 200, 200, 255)
        sinonsi num <= 4 alors
            !set_color(255, 150, 30, 255)
        sinonsi num <= 8 alors
            !set_color(200, 175, 0, 255)
        sinonsi num <= 16 alors
            !set_color(200, 125, 0, 255)
        sinonsi num <= 32 alors
            !set_color(200, 75, 0, 255)
        fin
    fin

    methode gauche () fait
        pour y allant de 0 a self.map.taille fait
            pour x allant de 0 a (self.map[y].taille) fait
                r = self.map[y][x];
                si r != 0 alors
                    l_x = x;
                    tant que x > 0 fait
                        si self.map[y][x - 1] == 0 alors
                            (self.map[y]!.modifie(x, 0))
                            (self.map[y]!.modifie(x - 1, r))
                            l_x = x;
                        sinon
                            casse;
                        fin
                        x = x - 1;
                    fin
                    
                    x = l_x - 1;

                    si x > 0 alors
                        si self.map[y][x - 1] == r alors
                            (self.map[y]!.modifie(x, 0))
                            (self.map[y]!.modifie(x - 1, r * 2))
                        fin
                    fin
                fin
            fin
        fin
    fin

    methode droite () fait
        pour y allant de 0 a self.map.taille fait
            pour x allant de 1 a (self.map[y].taille + 1) fait
                x = self.map[y].taille - x;
                r = self.map[y][x];
                si r != 0 alors
                    l_x = x;
                    tant que (x + 1 < self.map[y].taille) fait
                        si self.map[y][x + 1] == 0 alors
                            (self.map[y]!.modifie(x, 0))
                            (self.map[y]!.modifie(x + 1, r))
                            l_x = x;
                        sinon
                            casse;
                        fin
                        x = x + 1;
                    fin

                    x = l_x + 1;
                    si (x + 1 < self.map[y].taille) alors
                        si self.map[y][x + 1] == r alors
                            (self.map[y]!.modifie(x, 0))
                            (self.map[y]!.modifie(x + 1, r * 2))
                        fin
                    fin
                fin
            fin
        fin
    fin

    methode loop (events) fait
        !clear()
        
        pour i allant de 0 a events.taille fait
            event = events[i];
            si !et(event.type == "KeyDown", self.anti_repett) alors
                self.anti_repett = 0;
                si event == "Right" alors
                    !self.droite()
                sinonsi event == "Left" alors
                    !self.gauche()
                fin
            sinonsi event.type == "KeyUp" alors
                self.anti_repett = 1;
            fin
        fin

        pour y allant de 0 a self.map.taille fait
            pour x allant de 0 a (self.map[y].taille) fait
                num = self.map[y][x];
                si num != 0 alors
                    !self.couleur(num)
                    !fill_rect(x * self.psize, y * self.psize, self.psize, self.psize)
                    !set_color(0, 0, 0, 255)
                    !draw_text(x * self.psize + (self.psize / 4), y * self.psize + (self.psize / 4), self.psize / 2, self.psize / 2, !char(num), "font.ttf", 24)
                fin
            fin
        fin

        !render()
        !set_color(255, 255, 255, 255)
        renvoie 1;
    fin
fin

g = game();
self = g;
!mainloop(!g.loop)
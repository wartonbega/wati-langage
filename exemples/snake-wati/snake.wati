
inclue "std.wati";
inclue "./w_graphs/wati_graphs_events.wati";

classe texture contient
    methode constructeur (source, nom) fait
        self.nom = nom;
        self.rotation = 0;
        !load_texture_as(source, self.nom)
    fin

    methode tourne_origine (angle) fait
        angle = angle % 360;
        diff = angle - self.rotation % 360;
        si (diff != 0) alors
            !rotate_texture(self.nom, diff)
            self.rotation = self.rotation + diff % 360;
        fin
    fin

    methode render_angle (x, y, h, w, angle) fait
        angle = angle % 360;
        diff = angle - self.rotation % 360;
        si (diff != 0) alors
            !rotate_texture(self.nom, diff)
            self.rotation = self.rotation + diff % 360;
        fin
        !draw_rotated_texture(self.nom, x, y, h, w, diff)
    fin


    methode render (x, y, h, w) fait
        !draw_texture(self.nom, x, y, h, w)
    fin
fin

classe game contient
    methode constructeur () fait
        self.x = 60;
        self.y = 90;
        self.speed = 30;
        self.size = 30;
        self.direction = "r";

        self.queueX = list();
        self.queueY = list();

        self.taille = 3;

        self.random = random();

        self.head_t = texture("wati.png", "wati");
        self.pomme_t = texture("pomme.png", "pomme");
        !load_texture_as("corps_couche.png", "corps1")
        !load_texture_as("corps_droit.png", "corps2")
        !load_texture_as("tournant_1.png", "corps3")
        !load_texture_as("tournant_2.png", "corps4")
        !load_texture_as("tournant_3.png", "corps5")
        !load_texture_as("tournant_4.png", "corps6")
        !self.head_t.tourne_origine(-90)


        self.pommeX = !self.random.rand(16) * 30;
        self.pommeY = !self.random.rand(16) * 30;

        self.frame = 0;
        self.frames = 1;
        self.wait = 24;

        self.pause = 0;
    fin

    methode loop (event) fait
        self.frame = self.frame + 1 % self.wait;

        si event.taille != 0 alors
            pour i allant de 0 a event.taille fait
                e = event[i];
                si e == "Escape" alors
                    !quit_window();
                    renvoie 0;
                sinonsi (!et(!pas(self.pause), e == "Up")) alors
                    si self.direction != "d" alors
                        self.direction = "u";
                        !self.head_t.tourne_origine(180)
                    fin
                sinonsi (!et(!pas(self.pause), e == "Down")) alors
                    si self.direction != "u" alors
                        self.direction = "d";
                        !self.head_t.tourne_origine(0)
                    fin
                sinonsi (!et(!pas(self.pause), e == "Left")) alors
                    si self.direction != "r" alors
                        self.direction = "l";
                        !self.head_t.tourne_origine(90)
                    fin
                sinonsi (!et(!pas(self.pause), e == "Right")) alors
                    si self.direction != "l" alors
                        self.direction = "r";
                        !self.head_t.tourne_origine(-90)
                    fin
                sinonsi (e == "Space") alors
                    si self.pause alors
                        self.pause = 0;
                    sinon 
                        self.pause = 1;
                    fin
                sinonsi (e == "MouseButtonDown") alors
                    l = !get_mouse_pos();
                    self.x = l[0] - (l[0]%30);
                    self.y = l[1] - (l[1]%30);
                fin
            fin
        fin

        si !et(self.frame == 0, !pas(self.pause)) alors
            !set_window_title("snake : " + !char(self.taille))
            !clear()
            !self.queueX.plus(self.x)
            !self.queueY.plus(self.y)

            si self.queueX.taille > self.taille alors
                !self.queueX.pop(0)
                !self.queueY.pop(0)
            fin

            si self.direction == "u" alors
                self.y = self.y - self.speed;
            sinonsi self.direction == "d" alors
                self.y = self.y + self.speed;
            sinonsi self.direction == "l" alors
                self.x = self.x - self.speed;
            sinonsi self.direction == "r" alors
                self.x = self.x + self.speed;
            fin

            si !et(self.x == self.pommeX, self.y == self.pommeY) alors
                self.pommeX = !self.random.rand(16) * 30;
                self.pommeY = !self.random.rand(16) * 30;
                self.taille = self.taille + 1;
                si (self.taille % 5 == 0) alors
                    self.wait = self.wait - 1;
                fin
            fin

            si !ou(self.x < 0, self.y < 0) alors
                renvoie 0;
            fin

            si !ou(self.x >= 480, self.y >= 480) alors
                renvoie 0;
            fin

            !set_color(0, 100, 0, 255)
            tournant = "";
            pour i allant de 0 a self.queueX.taille fait
                x = self.queueX[i];
                y = self.queueY[i];

                si !et(self.x == x, self.y == y) alors
                    renvoie 0;
                fin
                si i != 0 alors
                    !draw_texture(!self.donne_corps(i), x, y, self.size, self.size)
                sinon
                    si (self.queueX.taille != 1) alors
                        x_p = !self.coordonnee(self.queueX[1]);
                        y_p = !self.coordonnee(self.queueY[1]);

                        x_m = !self.coordonnee(x);
                        y_m = !self.coordonnee(y);
                        si !et(!ou(x_m + 1 == x_p, x_p + 1 == x_m), y_m == y_p) alors
                            !draw_texture("corps1", x, y, self.size, self.size)
                        sinonsi !et(!ou(x_m - 1 == x_p, x_p - 1 == x_m), y_m == y_p) alors
                            !draw_texture("corps1", x, y, self.size, self.size)
                        sinonsi !et(!ou(y_m + 1 == y_p, y_p + 1 == y_m), x_m == x_p) alors
                            !draw_texture("corps2", x, y, self.size, self.size)
                        sinonsi !et(!ou(y_m - 1 == y_p, y_p - 1 == y_m), x_m == x_p) alors
                            !draw_texture("corps2", x, y, self.size, self.size) 
                        fin
                    fin
                fin
            fin

            !self.head_t.render(self.x, self.y, self.size, self.size)

            !self.pomme_t.render(self.pommeX, self.pommeY, self.size, self.size)
            !render()
        fin

        !set_color(0, 0, 0, 255)
        renvoie 1;
    fin

    methode coordonnee (x) fait
        renvoie x - (x % self.size) / self.size;
    fin

    methode donne_corps (i) fait
        si i != 0 alors
            si i + 1 == self.queueX.taille alors
                x_p = !self.coordonnee(self.x);
                y_p = !self.coordonnee(self.y);
            sinon
                x_p = !self.coordonnee(self.queueX[i + 1]);
                y_p = !self.coordonnee(self.queueY[i + 1]);
            fin

            x_m = !self.coordonnee(self.queueX[i - 1]);
            y_m = !self.coordonnee(self.queueY[i - 1]);

            si !et(!ou(x_m + 2 == x_p, x_p + 2 == x_m), y_m == y_p) alors
                renvoie "corps1";
            sinonsi !et(!ou(x_m - 2 == x_p, x_p - 2 == x_m), y_m == y_p) alors
                renvoie "corps1";
            sinonsi !et(!ou(y_m + 2 == y_p, y_p + 2 == y_m), x_m == x_p) alors
                renvoie "corps2";
            sinonsi !et(!ou(y_m - 2 == y_p, y_p - 2 == y_m), x_m == x_p) alors
                renvoie "corps2";

            sinonsi !et(x_m + 1 == x_p, y_m + 1 == y_p) alors
                si (!self.coordonnee(y) == y_p) alors
                    renvoie "corps5";
                sinon 
                    renvoie "corps3";
                fin
            sinonsi !et(x_m + 1 == x_p, y_m - 1 == y_p) alors
                si (!self.coordonnee(y) == y_p) alors
                    renvoie "corps6";
                sinon 
                    renvoie "corps4";
                fin
            sinonsi !et(x_m - 1 == x_p, y_m - 1 == y_p) alors
                si (!self.coordonnee(y) == y_p) alors
                    renvoie "corps3";
                sinon 
                    renvoie "corps5";
                fin
            sinonsi !et(x_m - 1 == x_p, y_m + 1 == y_p) alors
                si (!self.coordonnee(y) == y_p) alors
                    renvoie "corps4";
                sinon 
                    renvoie "corps6";
               
                fin
            fin
        fin
        renvoie "corps1";
    fin
fin

!init_window(480, 480)
g = game();
self = g;
!mainloop(!g.loop);

!println("perdu, score : " + !char(g.taille))
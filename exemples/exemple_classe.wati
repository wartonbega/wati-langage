// Par Anton Appel le 12 juin 2023
// Script d'exemple de définitions et d'utilisation d'une classe
// la variable 'self' représente toujours l'objet de travail dans les méthodes
inclue "std.wati";

classe Personne contient
    methode constructeur (nom, age) fait 
        self.nom = nom;
        self.age = age;
    fin

    methode en_string () fait 
        // Doit toujours renvoyer une variable de type 'char', ou un objet transformable en 'char'
        renvoie "<Personne : age=" + !char(self.age) + ", nom=" + self.nom + ">";
    fin

    methode plus (autre) fait 
        "!plus : Ajoute les prénoms en les séparants par un trait d'union '-' et additionne les ages. Modifie le premier objet"
        self.nom = self.nom + "-" + autre.nom;
        self.age = self.age + autre.age;
        renvoie self;
    fin

    methode anniversaire () fait 
        "!anniversaire : Viellis de 1 an l'individu"
        self.age = self.age + 1;
    fin
fin


// La création d'un nouvel objet est comme la syntaxe ci-dessous
// quand on appel classe(arg), la méthode constructeur est tout de suite appelée avec les arguments passés
personne1 = Personne("Marie", 21);
personne2 = Personne("Jeanne", 47);

!println(personne1) // Vas appeler !Personne.en_string 
!personne1.anniversaire()
!println(personne1) 

personne1 = personne1 + personne2; // On appel la méthode 'caché' !personne1.plus(personne2)
// La variable personne2 reste inchangé
!println(personne1)
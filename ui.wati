inclue "./lib/std.wati";

classe bouton contient 
    methode constructeur (text, action, x, y, w, h) fait
        self.text = text;
        self.action = action;
        self.x = x;
        self.y = y;
        self.w = w;
        self.h = h;
        self.font = "font.ttf";

        self.hovered = 0;
    fin

    methode affiche () fait
        si self.hovered alors
            !set_color(90, 90, 90, 255)
        sinon
            !set_color(148, 148, 148, 255)
        fin
        !fill_rect(self.x, self.y, self.w, self.h)
        !draw_text(self.x, self.y, self.h, self.w, self.text, self.font, 10)
    fin

    methode survole (x, y, click) fait
        si !et(!et(self.x < x, self.x + self.w > x), !et(self.y < y, self.y + self.h > y)) alors
            self.hovered = 1;
            si click alors
                !self.action(self)
            fin
            renvoie 0;
        fin
        self.hovered = 0;
        renvoie 0;
    fin

    methode en_string () fait
        renvoie "<bouton text=" + self.text + ">";
    fin
fin

classe fenetre contient
    methode constructeur (w, h) fait
        !init_window(w, h)
        self.widgs = list();
        self.click = 0;
    fin 

    methode demmare () fait
        !mainloop(!self.loop)
    fin

    methode loop (event) fait
        !clear()
        l = !get_mouse_pos();
        Mx = l[0];
        My = l[1];
        pour e allant de 0 a event.taille fait
            event = event[e];
            si event == "MouseButtonDown" alors
                self.click = 1;
            sinonsi event == "MouseButtonUp" alors
                self.click = 0;
            fin
        fin

        pour i allant de 0 a self.widgs.taille fait
            widget = self.widgs[i];
            self.click = !widget.survole(Mx, My, self.click);
            !widget.affiche()
        fin
        !render()
        !set_color(0, 0, 0, 255)
        renvoie 1;
    fin
fin

win = fenetre(200, 200);
but = bouton("salut", !println, 10, 10, 50, 40);
!win.widgs.plus(but)
!win.demmare()